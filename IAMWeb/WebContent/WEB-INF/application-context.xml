<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   					   http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
	   					    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
	   					      
   <!-- component to scan the packages -->
    <context:component-scan base-package="fr.rktv.iamcore" />
    <!-- @Autowired -->
    <!-- DataSource ds -->
    <bean id="dataSourceBean" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver"/>
		<property name="url" value="jdbc:derby://localhost:1527/IAM;create=true"/>
		<property name="username" value="tom"/>
		<property name="password" value="tom"/>
	</bean>
	<!-- hibernate session factory details -->
	<bean id="beanBasedSessionFactory"	class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceBean" />
		<property name="hibernateProperties" ref="hibernateProperties" />
		<property name="packagesToScan" value="fr.rktv.iamcore.datamodel" />
	</bean>
	<!-- hibernate configuration -->
	<bean class="org.springframework.beans.factory.config.PropertiesFactoryBean" id="hibernateProperties">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.DerbyTenSevenDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.connection.autocommit">false</prop>
			</props>
		</property>
	</bean>
	<!-- Digester details for Password encryption -->
	<bean id="stringDigester" class="org.jasypt.digest.PooledStringDigester">
   		<property name="poolSize" value="2"/>
   	 	<property name="algorithm" value="SHA-256"/>
    	<property name="iterations" value="100"/>
    	<property name="saltGenerator">
     		 <bean class="org.jasypt.salt.RandomSaltGenerator"/>
   		</property>
    	<property name="saltSizeBytes" value="16"/>
    </bean>
    <!-- Hibernate DAO autowiring -->
	<bean class="fr.rktv.iamcore.services.dao.impl.IdentityHibernateDAO" id="hibernateDAO">
	</bean>
	<!-- Authentication DAO Autowiring -->
	<bean class="fr.rktv.iamcore.services.dao.impl.AuthHibernateDAO" id="AuthenticationDAO">
	</bean>
	<!-- hql query for search identity  in identity table -->
	<bean class="java.lang.String" id="searchFromEmail">
	<constructor-arg><value>from Identity where email = :email</value></constructor-arg>
	</bean>
	<!-- hql query for user search in user table -->
	<bean class="java.lang.String" id="searchUser">
	<constructor-arg><value>from Credentail where username = :username</value></constructor-arg>
	</bean>
	<!-- Currently one License key is hardcoding in the application context. later on this will move to seperate  configuration system -->
	<bean class="java.lang.String" id="Lincese_Key">
	<constructor-arg><value>23a4a4bd-83a9-4b95-be9a-638bf5fd35f3</value></constructor-arg>
	</bean>
</beans>